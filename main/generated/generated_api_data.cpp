// TEMPORARY FILE - Should be generated by process_manifests.py
// This file provides API metadata that should be extracted from manifests

#include "manifest_reader.h"

namespace ModESP {

// API metadata that should be generated from manifests
const APIMethodInfo generated_apis[] = {
    // APIs from SensorModule
    {
        .method = "sensor.get_temperature",
        .module = "SensorModule",
        .description = "Get current temperature reading",
        .access_level = AccessLevel::USER
    },
    {
        .method = "sensor.get_all_readings", 
        .module = "SensorModule",
        .description = "Get all sensor readings",
        .access_level = AccessLevel::USER
    },
    {
        .method = "sensor.calibrate",
        .module = "SensorModule", 
        .description = "Calibrate sensor",
        .access_level = AccessLevel::TECHNICIAN
    },
    
    // APIs from HeartbeatModule
    {
        .method = "system.get_uptime",
        .module = "HeartbeatModule",
        .description = "Get system uptime",
        .access_level = AccessLevel::USER
    },
    {
        .method = "system.get_health_status",
        .module = "HeartbeatModule",
        .description = "Get system health status",
        .access_level = AccessLevel::USER
    },
    {
        .method = "system.restart",
        .module = "HeartbeatModule",
        .description = "Restart the system",
        .access_level = AccessLevel::ADMIN
    }
};

const size_t generated_api_count = 6;

// UI schemas (empty for now)
const UISchema generated_ui_schemas[] = {
    {
        .module_name = "SensorModule"
    },
    {
        .module_name = "HeartbeatModule"
    }
};

const size_t generated_ui_schema_count = 2;

} // namespace ModESP
